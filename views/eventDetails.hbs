<div class="modal-container modal-container-hidden" id="modal-container-delete">
    <div class="modal modal-hidden" id="modal-details-delete">
        <h2 class="modal-header header">Delete event?</h2>
        <p class="modal-description">The event will be deleted and will<br>not show up in any records</p>
        <div class="modal-controls">
            <button class="bg-button button" id="cancel-modal-no-button">
                <div class="button-wrapper">
                    <i class="lni lni-check"></i>
                    <p>Keep event</p>
                </div>
            </button>
            <form action="/deleteEvent?id={{event._id}}" method="post">
                <button class="destructive-button button" id="delete-modal-yes-button">
                    <div class="button-wrapper">
                        <i class="lni lni-trash-3"></i>
                        <p>Delete</p>
                    </div>
                </button>
            </form>
        </div>
    </div>
</div>

<div class="modal-container modal-container-hidden" id="modal-container-cancel">
    <div class="modal modal-hidden" id="modal-details-cancel">
        <h2 class="modal-header header">Cancel event?</h2>
        <p class="modal-description">The event will be cancelled, you can <br>still view event in past events</p>
        <div class="modal-controls">
            <button class="bg-button button" id="cancel-modal-no-button">
                <div class="button-wrapper">
                    <i class="lni lni-check"></i>
                    <p>Keep event</p>
                </div> 
            </button>
            <form action="/cancelEvent?id={{event._id}}" method="POST">
                <button class="destructive-button button" id="cancel-modal-yes-button">
                    <div class="button-wrapper">
                        <i class="lni lni-xmark"></i>
                        <p>Cancel</p>
                    </div>
                </button>
            </form>
        </div>
    </div>
</div>

<div class="page-title-bar">
    <button class="back-link">
        <a class="button-wrapper" href="/eventlist">
            <i class="lni lni-arrow-left"></i>
            <p>Back</p>
        </a>
    </button>
    <h2 class="header">Event Details</h2>
</div>
    <div class="event-details card">
        {{#if showButtons}}
        <div class="event-controls">
            <button class="bg-button button" id="details-edit-button">
                <a class="bg-button-wrapper button-wrapper" href="#">
                    <i class="lni lni-pencil-1"></i>
                    <p>Edit</p>
                </a>
            </button>
            <button type="button" class="destructive-button button" id="details-delete-button">
            <span class="bg-button-wrapper button-wrapper">
            <i class="lni lni-trash-3"></i>
                    <p>Delete</p>
            </span>
            </button>
        </div>
        {{/if}}

    <div class="event-box-top" id="details-top-box">
        <span id="event-name"></span>
        <span id="client-name"></span>
    </div>

    <div class="event-box-bottom" id="details-box">
        <span id="date-loc">
            <span id="date"></span>
            <span id="location"></span>
        </span>
        <span id="contact">
            <span>Contact Person</span>
            <span id="contact-name"></span>
            <span id="contact-info"></span>
        </span>
        <span id="description-span">
            <span>Description</span>
            <span id="description"></span>
        </span>
    </div>

    <div class="event-box-bottom">
        <span id="status"></span>

    </div>
    
        <div class="choice-buttons" id="details-choices">
            {{#if showButtons}}
            <button type="submit" class="bg-button button" id="cancel-button">
                <span class="bg-button-wrapper button-wrapper">
                <i class="lni lni-xmark"></i>
                <p>Cancel</p>
            </span>
            </button>
            <button class="fg-button button" id="mark-done-button">
                <a class="fg-button-wrapper button-wrapper" href="#">
                    <i class="lni lni-check"></i>
                    <p>Mark as done</p>
                </a>
            </button>
            {{/if}}
        </div>

        {{!-- displays the team members lang 
        <div class="members-box">
            {{#if teamMembers.length}}
                <ul>
                {{#each teamMembers}}
                <li>{{firstName}} {{lastName}}</li>
            {{/each}}
                </ul>
                {{else}}
                <p>Currently no members in this event.</p>
            {{/if}}
            </div> --}}
        

    <div class="team-members">
        <div class="grid-container">
            <h3 class="secondary-header">Team Members</h3>
            <div class="grid-controls">
                <form role="search" class="search-bar" onsubmit="return false;">
                <button type="submit"><i class="lni lni-search-1"></i></button>
                    <input type="search" name="q" id="searchInput" placeholder="Search..." autocomplete="off">
                </form>
                {{#if showButtons}}
                    <button class="fg-button button" id="attendance-check-button">
                        <a class="fg-button-wrapper button-wrapper" href="/eventAttendance?id={{event._id}}">
                            <i class="lni lni-user-multiple-4"></i>
                            <p>Check attendance</p>
                        </a>
                    </button>
                {{/if}}
            </div>
            <div class="team-mini-grid" id="participantGrid">
                {{#if teamMembers.length}}
                    {{#each teamMembers}}
                    {{> teamMemberMini this}}
                    {{/each}}
                {{else}}
                    <p>Currently no members in this event.</p>
                {{/if}}
            </div>
        </div>

         <div class="grid-container">
            <h3 class="secondary-header">Suppliers</h3>
            <div class="grid-controls">
                <form role="search" class="search-bar" onsubmit="return false;">
                <button type="submit"><i class="lni lni-search-1"></i></button>
                    <input type="search" name="q" id="searchInput" placeholder="Search..." autocomplete="off">
                </form>
                {{#if showButtons}}
                    <button class="fg-button button" id="attendance-check-button">
                        <a class="fg-button-wrapper button-wrapper" href="/eventAttendance?id={{event._id}}">
                            <i class="lni lni-user-multiple-4"></i>
                            <p>Check attendance</p>
                        </a>
                    </button>
                {{/if}}
            </div>
            <div class="team-mini-grid">
                {{!-- <ul id="memberList"></ul>
            <p id="emptyMessage" style="display: none;">No matching team members found.</p> --}}
            {{#if supplierList.length}}
                {{#each supplierList}}
                    {{> supplierMini this}}
                {{/each}}
            {{else}}
                <p>Currently no suppliers in this event.</p>
            {{/if}}
            </div>
        </div>


    <script>
    const teamId = '{{team._id}}'; //gets the teamid in eventDetailsController
    </script>

    <script>
        const searchInput = document.getElementById('searchInput');
        const participantGrid = document.getElementById('participantGrid');

        function debounce(fn, delay) {
            let timeout;
            return function (...args) {
                clearTimeout(timeout);
                timeout = setTimeout(() => fn.apply(this, args), delay);
            };
        }

        async function fetchEventParticipants(query) {
            try {
                const response = await fetch(`/searchEventParticipants?q=${encodeURIComponent(query)}&id=${teamId}`);
                const data = await response.json();
                const { members, suppliers } = data;

                // Clear previous contents
                participantGrid.innerHTML = '';

                if (members.length === 0 && suppliers.length === 0) {
                    participantGrid.innerHTML = '<p>No matching participants found.</p>';
                    return;
                }

                // Combine members and suppliers, assign role tags
                const combined = [
                    ...members.map(m => ({ ...m, role: m.role || 'Team Member' })),
                    ...suppliers.map(s => ({ ...s, role: s.role || 'Supplier' }))
                ];

                combined.forEach(participant => {
                    const button = document.createElement('button');
                    button.className = 'team-member-mini-card';
                    button.setAttribute('type', 'button');
                    button.setAttribute('data-id', participant._id);
                    button.setAttribute('data-firstName', participant.firstName || '');
                    button.setAttribute('data-lastName', participant.lastName || '');
                    button.setAttribute('data-email', participant.email || '');
                    button.setAttribute('data-role', participant.role || '');
                    button.setAttribute('data-bio', participant.bio || '');
                    button.setAttribute('data-pfp', participant.pfp || '');

                    button.innerHTML = `
                        <div class="team-member-mini-picture" style="background-image: url('${participant.pfp || ''}');"></div>
                        <span id="full-name">${participant.firstName ?? ''} ${participant.lastName ?? ''}</span>
                        <span id="role">${participant.role || ''}</span>
                        <i id="teamMiniAddButton" class="lni lni-plus"></i>
                        <i id="teamMiniRemoveButton" class="lni lni-xmark"></i>
                    `;

                    participantGrid.appendChild(button);
                });

            } catch (err) {
                console.error('Search failed:', err);
                participantGrid.innerHTML = '<p>Error loading search results.</p>';
            }
        }

        searchInput.addEventListener('input', debounce((e) => {
            const query = e.target.value;
            if (query.trim() === '') {
                // reload original team members if input is cleared
                window.location.reload(); // OR cache original HTML on load and reinsert
            } else {
                fetchEventParticipants(query);
            }
        }, 300));
    </script>


       
    </div>
    
</div>