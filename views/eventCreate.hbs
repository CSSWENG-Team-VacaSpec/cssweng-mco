<div class="form-wizard card">
    <form class="form" action="/create/createEvent" method="post">
        <div class="form-page-container">
            <div class="form-page" id="detailsPage">
                <h1 class="secondary-header">Event details</h1>
                <div class="form-row">
                    <div class="text-field-container">
                        <div class="field-label-container">
                            <label class="field-label" for="event-name">Event name</label>
                            <span class="error-text">*Required</span>
                        </div>
                        <input type="text" id="event-name" class="text-field" name="event-name" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="text-field-container">
                        <div class="field-label-container">
                            <label class="field-label" for="client-first-name">Client first name</label>
                            <span class="error-text">*Required</span>
                        </div>
                        <input type="text" id="client-first-name" class="text-field" name="client-first-name" required>
                    </div>
                    <div class="text-field-container">
                        <div class="field-label-container">
                            <label class="field-label" for="client-last-name">Client last name</label>
                            <span class="error-text">*Required</span>
                        </div>
                        <input type="text" id="client-last-name" class="text-field" name="client-last-name" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="text-field-container">
                        <div class="field-label-container">
                            <label class="field-label" for="event-description">Description</label>
                            <span class="error-text">*Required</span>
                        </div>
                        <textarea id="event-description" class="text-field" name="event-description" rows="6" required></textarea>
                    </div>
                </div>
                <div class="form-row">
                    <div class="text-field-container">
                        <div class="field-label-container">
                            <label class="field-label" for="location">Location</label>
                            <span class="error-text">*Required</span>
                        </div>
                        <input type="text" id="location" class="text-field" name="location" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="text-field-container">
                        <div class="field-label-container">
                            <label class="field-label" for="start-date">Start date</label>
                            <span class="error-text">*Required</span>
                        </div>
                        <input type="date" id="start-date" class="text-field" name="start-date" required>
                    </div>
                    <div class="text-field-container">
                        <div class="field-label-container">
                            <label class="field-label" for="end-date">End date</label>
                            <span class="error-text">*Required</span>
                        </div>
                        <input type="date" id="end-date" class="text-field" name="end-date" required>
                    </div>
                </div>
                <h1 class="secondary-header">Contact person</h1>
                <div class="form-row">
                    <div class="text-field-container">
                        <div class="field-label-container">
                            <label class="field-label" for="contact-first-name">First name</label>
                            <span class="error-text">*Required</span>
                        </div>
                        <input type="text" id="contact-first-name" class="text-field" name="contact-first-name" required>
                    </div>
                    <div class="text-field-container">
                        <div class="field-label-container">
                            <label class="field-label" for="contact-last-name">Last name</label>
                            <span class="error-text">*Required</span>
                        </div>
                        <input type="text" id="contact-last-name" class="text-field" name="contact-last-name" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="text-field-container">
                        <div class="field-label-container">
                            <label class="field-label" for="phone-number">Phone number</label>
                            <span class="error-text">*Required</span>
                        </div>
                        <input type="text" id="phone-number" class="text-field" name="phone-number" required>
                    </div>
                </div>
            </div>
            <div class="form-page" id="team-members-page">
                <h1 class="secondary-header">Assign team members</h1>
                <div class="grid-container" >
                    <h1 class="secondary-header">Search</h1>
                    <div role="search" class="search-bar" id="memberSearchForm">
                        <input type="search" name="q" id="memberSearchInput" placeholder="Search team members...">
                    </div>
                    <div class="team-mini-grid" id="memberSearchResults">
                        {{#each members}}
                            {{>teamMemberMini this}}
                        {{else}}
                            <p>No members currently</p>
                        {{/each}}
                    </div>
                </div>
                <div class="grid-container">
                    <h1 class="secondary-header">Added team members</h1>
                    <div class="team-mini-grid" id="addedMembers"></div>
                </div>
            </div>
            <div class="form-page" id="suppliers-page">
                <h1 class="secondary-header">Add suppliers</h1>
                <div class="grid-container">
                    <h1 class="secondary-header">Search</h1>
                    <div role="search" class="search-bar" id="supplierSearchForm">
                        <button type="submit" id="search-icon"><i class="lni lni-search-1"></i></button>
                        <input type="search" name="q" id="supplierSearchInput" placeholder="Search suppliers...">
                    </div>
                    <div class="team-mini-grid" id="supplierSearchResults">
                        {{#each suppliers}}
                            {{>supplierMini this}}
                        {{else}}
                            <p>No suppliers currently</p>
                        {{/each}}
                    </div>
                </div>
                <div class="grid-container">
                    <h1 class="secondary-header">Added suppliers</h1>
                    <div class="team-mini-grid" id="addedSuppliers"></div>
                </div>
            </div>
        </div>
        <div class="form-controls">
            <button type="button" class="disabled-button bg-button button" id="form-back-button" disabled>
                <div class="button-wrapper">
                    <i class="lni lni-arrow-left"></i>
                    <p>Back</p>
                </div>
            </button>
            <button type="button" class="disabled-button fg-button button" id="form-next-button" disabled>
                <div class="button-wrapper">
                    <i class="lni lni-arrow-right"></i>
                    <p>Next</p>
                </div>
            </button>
            <button type="submit" class="form-hidden-button fg-button button" id="form-submit-button" disabled>
                <div class="button-wrapper">
                    <i class="lni lni-check"></i>
                    <p>Create event</p>
                </div>
            </button>
        </div>
        <input type="hidden" id="added-members-input" name="addedMembers">
        <input type="hidden" id="added-suppliers-input" name="addedSuppliers">

    </form>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const memberSearchInput = document.getElementById('memberSearchInput');
    const supplierSearchInput = document.getElementById('supplierSearchInput');

     [memberSearchInput, supplierSearchInput].forEach(input => {
        input.addEventListener('keydown', (e) => {
            if (e.key === 'Enter') {
                e.preventDefault(); // stops the form from submitting
            }
        });
    });
    
    const membersContainer = document.getElementById('memberSearchResults');
    const suppliersContainer = document.getElementById('supplierSearchResults');

    const allMembers = [
        {{#each members}} {
            _id: "{{this._id}}",
            firstName: "{{this.firstName}}",
            lastName: "{{this.lastName}}",
            role: "{{this.role}}",
            email: "{{this.email}}",
            pfp: "{{this.pfp}}",
            bio: "{{this.bio}}",
            status: "{{this.status}}"
        }{{#unless @last}},{{/unless}}
        {{/each}}
    ];

    const allSuppliers = [
        {{#each suppliers}} {
            _id: "{{this._id}}",
            companyName: "{{this.companyName}}",
            status: "{{this.status}}"
        }{{#unless @last}},{{/unless}}
        {{/each}}
    ];

    const renderMembers = (filtered) => {
        membersContainer.innerHTML = '';
        if (filtered.length === 0) {
            membersContainer.innerHTML = '<p>No matching members found.</p>';
            return;
        }

        filtered.forEach(member => {
            const button = document.createElement('button');
            button.className = 'team-member-mini-card';
            button.setAttribute('type', 'button');
            button.setAttribute('data-id', member._id);
            button.setAttribute('data-firstName', member.firstName);
            button.setAttribute('data-lastName', member.lastName);
            button.setAttribute('data-role', member.role);
            button.setAttribute('data-email', member.email);
            button.setAttribute('data-pfp', member.pfp);
            button.setAttribute('data-bio', member.bio);
            button.setAttribute('data-status', member.status);

            button.innerHTML = `
                <img class="team-member-mini-picture" src="/api/avatar/${member._id}"></img>
                <span id="full-name">${member.firstName} ${member.lastName}</span>
                <span id="role">${member.role}</span>
                <i id="teamMiniAddButton" class="lni lni-plus"></i>
                <i id="teamMiniRemoveButton" class="lni lni-xmark"></i>
            `;
            membersContainer.appendChild(button);
        });
    };

    const renderSuppliers = (filtered) => {
        suppliersContainer.innerHTML = '';
        if (filtered.length === 0) {
            suppliersContainer.innerHTML = '<p>No matching suppliers found.</p>';
            return;
        }

        filtered.forEach(supplier => {
            const button = document.createElement('button');
            button.className = 'team-member-mini-card';
            button.setAttribute('type', 'button');
            button.setAttribute('data-id', supplier._id);
            button.setAttribute('data-company', supplier.companyName);
            button.setAttribute('data-status', supplier.status);

            button.innerHTML = `
                <span id="full-name">${supplier.companyName}</span>
                <i id="teamMiniAddButton" class="lni lni-plus"></i>
                <i id="teamMiniRemoveButton" class="lni lni-xmark"></i>
            `;
            suppliersContainer.appendChild(button);
        });
    };

    const debounce = (fn, delay) => {
        let timeout;
        return function (...args) {
            clearTimeout(timeout);
            timeout = setTimeout(() => fn.apply(this, args), delay);
        };
    };

    const filterMembers = (query) => {
        const filtered = allMembers.filter(member =>
            `${member.firstName} ${member.lastName}`.toLowerCase().includes(query.toLowerCase())
        );
        renderMembers(filtered);
    };

    const filterSuppliers = (query) => {
        const filtered = allSuppliers.filter(supplier =>
            supplier.companyName.toLowerCase().includes(query.toLowerCase())
        );
        renderSuppliers(filtered);
    };

    memberSearchInput.addEventListener('input', debounce((e) => {
        filterMembers(e.target.value);
    }, 300));

    supplierSearchInput.addEventListener('input', debounce((e) => {
        filterSuppliers(e.target.value);
    }, 300));

    // render
    renderMembers(allMembers);
    renderSuppliers(allSuppliers);
});

</script>


